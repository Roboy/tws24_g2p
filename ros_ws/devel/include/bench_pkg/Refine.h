// Generated by gencpp from file bench_pkg/Refine.msg
// DO NOT EDIT!


#ifndef BENCH_PKG_MESSAGE_REFINE_H
#define BENCH_PKG_MESSAGE_REFINE_H

#include <ros/service_traits.h>


#include <bench_pkg/RefineRequest.h>
#include <bench_pkg/RefineResponse.h>


namespace bench_pkg
{

struct Refine
{

typedef RefineRequest Request;
typedef RefineResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Refine
} // namespace bench_pkg


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::bench_pkg::Refine > {
  static const char* value()
  {
    return "358e233cde0c8a8bcfea4ce193f8fc15";
  }

  static const char* value(const ::bench_pkg::Refine&) { return value(); }
};

template<>
struct DataType< ::bench_pkg::Refine > {
  static const char* value()
  {
    return "bench_pkg/Refine";
  }

  static const char* value(const ::bench_pkg::Refine&) { return value(); }
};


// service_traits::MD5Sum< ::bench_pkg::RefineRequest> should match
// service_traits::MD5Sum< ::bench_pkg::Refine >
template<>
struct MD5Sum< ::bench_pkg::RefineRequest>
{
  static const char* value()
  {
    return MD5Sum< ::bench_pkg::Refine >::value();
  }
  static const char* value(const ::bench_pkg::RefineRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::bench_pkg::RefineRequest> should match
// service_traits::DataType< ::bench_pkg::Refine >
template<>
struct DataType< ::bench_pkg::RefineRequest>
{
  static const char* value()
  {
    return DataType< ::bench_pkg::Refine >::value();
  }
  static const char* value(const ::bench_pkg::RefineRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::bench_pkg::RefineResponse> should match
// service_traits::MD5Sum< ::bench_pkg::Refine >
template<>
struct MD5Sum< ::bench_pkg::RefineResponse>
{
  static const char* value()
  {
    return MD5Sum< ::bench_pkg::Refine >::value();
  }
  static const char* value(const ::bench_pkg::RefineResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::bench_pkg::RefineResponse> should match
// service_traits::DataType< ::bench_pkg::Refine >
template<>
struct DataType< ::bench_pkg::RefineResponse>
{
  static const char* value()
  {
    return DataType< ::bench_pkg::Refine >::value();
  }
  static const char* value(const ::bench_pkg::RefineResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // BENCH_PKG_MESSAGE_REFINE_H
